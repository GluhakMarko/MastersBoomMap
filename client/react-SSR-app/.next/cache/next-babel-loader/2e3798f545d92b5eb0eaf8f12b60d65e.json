{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport axios from 'axios';\nvar data = [];\n\nconst serverLocation = require(\"../../../../src/config/keys\").server;\n\nexport default class Test extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataLeto: []\n    });\n  }\n\n  componentDidMount() {\n    axios.get(`${serverLocation}/api/graph/31`).then(res => {\n      this.setState({\n        dataLeto: res.data\n      });\n\n      for (var key in this.state) {\n        data.push(this.state[key]);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(AreaChart, {\n      width: 500,\n      height: 300,\n      data: this.state.dataLeto.podatki,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      }\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }), __jsx(XAxis, {\n      dataKey: \"promet\",\n      \"text-transform\": \"uppercase\"\n    }), __jsx(YAxis, {\n      domain: [0, 70000]\n    }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(Area, {\n      type: \"monotone\",\n      dataKey: \"nesrece\",\n      stroke: \"#66b2b2\",\n      fill: \"#66b2b2\",\n      dot: {\n        fill: '#008080',\n        strokeWidth: 1\n      }\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}