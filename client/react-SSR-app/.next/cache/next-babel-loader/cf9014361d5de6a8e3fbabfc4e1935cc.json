{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport Button from '@material-ui/core/Button';\nimport { Container, Row, Col } from 'reactstrap';\nimport TimePicker from 'rc-time-picker';\nimport 'rc-time-picker/assets/index.css';\nvar day_options = [{\n  value: '0',\n  label: 'Ponedeljek'\n}, {\n  value: '1',\n  label: 'Torek'\n}, {\n  value: '2',\n  label: 'Sreda'\n}, {\n  value: '3',\n  label: 'Četrtek'\n}, {\n  value: '4',\n  label: 'Petek'\n}, {\n  value: '5',\n  label: 'Sobota'\n}, {\n  value: '6',\n  label: 'Nedelja'\n}];\nvar weather_options = [{\n  value: 'J',\n  label: 'Jasno'\n}, {\n  value: 'D',\n  label: 'Deževno'\n}, {\n  value: 'O',\n  label: 'Oblačno'\n}, {\n  value: 'S',\n  label: 'Sneg'\n}, {\n  value: 'V',\n  label: 'Veter'\n}, {\n  value: 'M',\n  label: 'Megla'\n}];\nvar month_options = [{\n  value: '1',\n  label: 'Januar'\n}, {\n  value: '2',\n  label: 'Februar'\n}, {\n  value: '3',\n  label: 'Marec'\n}, {\n  value: '4',\n  label: 'April'\n}, {\n  value: '5',\n  label: 'Maj'\n}, {\n  value: '6',\n  label: 'Junij'\n}, {\n  value: '7',\n  label: 'Julij'\n}, {\n  value: '8',\n  label: 'Avgust'\n}, {\n  value: '9',\n  label: 'September'\n}, {\n  value: '10',\n  label: 'Oktober'\n}, {\n  value: '11',\n  label: 'November'\n}, {\n  value: '12',\n  label: 'December'\n}];\nvar surface_options = [{\n  value: 'suho',\n  label: 'Suho'\n}, {\n  value: 'M',\n  label: 'Mokro'\n}, {\n  value: 'SL',\n  label: 'Sneženo'\n}];\n\nvar CustomFilter = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomFilter, _React$Component);\n\n  var _super = _createSuper(CustomFilter);\n\n  function CustomFilter(props) {\n    var _this;\n\n    _classCallCheck(this, CustomFilter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"changeVisibility\", function (visibility) {\n      _this.setState({\n        visible: visibility\n      });\n\n      console.log(visibility);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDayChange\", function (selected) {\n      !selected ? _this.setState({\n        selectedDay: -1\n      }) : _this.setState({\n        selectedDay: selected.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMonthChange\", function (selected) {\n      !selected ? _this.setState({\n        selectedMonth: -1\n      }) : _this.setState({\n        selectedMonth: selected.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleWeatherChange\", function (selected) {\n      !selected ? _this.setState({\n        selectedWeather: -1\n      }) : _this.setState({\n        selectedWeather: selected.value\n      });\n    });\n\n    _this.state = {\n      selectedDay: '-1',\n      selectedMonth: '-1',\n      selectedTime: '-1',\n      selectedWeather: 'N',\n      surface: {\n        general: 'ne_suho',\n        type: 'SU'\n      },\n      visible: \"hidden\"\n    };\n    _this.handleDayChange = _this.handleDayChange.bind(_assertThisInitialized(_this));\n    _this.handleTimeChange = _this.handleTimeChange.bind(_assertThisInitialized(_this));\n    _this.handleWeatherChange = _this.handleWeatherChange.bind(_assertThisInitialized(_this));\n    _this.handleSurfaceChange = _this.handleSurfaceChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.changeVisibility = _this.changeVisibility.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CustomFilter, [{\n    key: \"handleTimeChange\",\n    value: function handleTimeChange(event) {\n      event ? this.setState({\n        selectedTime: event.format(\"HH\") + '.0'\n      }) : this.setState({\n        selectedTime: -1\n      });\n    }\n  }, {\n    key: \"handleSurfaceChange\",\n    value: function handleSurfaceChange(selected) {\n      var surfaceChoice = \"\";\n\n      if (selected) {\n        if (selected.value !== 'suho') {\n          surfaceChoice = {\n            general: \"ne_suho\",\n            type: selected.value\n          };\n        } else {\n          surfaceChoice = {\n            general: \"suho\",\n            type: \"suho\"\n          };\n        }\n      }\n\n      !selected ? this.setState({\n        surface: 'ne_suho'\n      }) : this.setState({\n        surface: surfaceChoice\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var state = {\n        PRVR_Vreme: this.state.selectedWeather,\n        Cas_Nesrece: this.state.selectedTime,\n        dan_v_tednu: this.state.selectedDay,\n        mesec: this.state.selectedMonth,\n        PRPV_Povrsje: this.state.surface\n      };\n      this.props.change(state, this.state.surface);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          visibility: this.state.visible\n        }\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit\n      }, __jsx(\"h6\", null, \" Po meri: \"), __jsx(\"hr\", null), __jsx(\"label\", {\n        className: \"custom\"\n      }), __jsx(Select, {\n        isClearable: true,\n        placeholder: \"Dan v tednu...\",\n        options: day_options,\n        onChange: this.handleDayChange\n      }), __jsx(\"br\", null), __jsx(Select, {\n        isClearable: true,\n        placeholder: \"Vreme...\",\n        options: weather_options,\n        onChange: this.handleWeatherChange\n      }), __jsx(\"br\", null), __jsx(Select, {\n        isClearable: true,\n        placeholder: \"Mesec...\",\n        options: month_options,\n        onChange: this.handleMonthChange\n      }), __jsx(\"br\", null), __jsx(Select, {\n        isClearable: true,\n        placeholder: \"Povr\\u0161je...\",\n        options: surface_options,\n        onChange: this.handleSurfaceChange\n      }), __jsx(\"br\", null), __jsx(TimePicker, {\n        placeholder: \"Čas...\",\n        showSecond: false,\n        onChange: this.handleTimeChange\n      }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, null, __jsx(Button, {\n        variant: \"outlined\",\n        type: \"submit\"\n      }, \"Prika\\u017Ei \")))));\n    }\n  }]);\n\n  return CustomFilter;\n}(React.Component);\n\nexport { CustomFilter as default };","map":null,"metadata":{},"sourceType":"module"}