{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport Map from \"../components/Map\";\nimport Legend from \"./components/Legend\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomFilter from \"./components/CustomFilter\";\nimport Breakpoint, { BreakpointProvider } from \"react-socks\";\nconst options = [{\n  value: \"current\",\n  label: \"Trenutno stanje\"\n}, {\n  value: \"all\",\n  label: \"Kritični odseki\"\n}];\n\nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", selectedOption => {\n      this.mapElement.current.changeOption(selectedOption);\n      this.setState({\n        selectedOption: selectedOption\n      });\n      let visi = selectedOption.value === \"all\" ? \"visible\" : \"hidden\";\n      console.log(selectedOption);\n      console.log(visi);\n      this.customFilter.current.changeVisibility(visi);\n    });\n\n    _defineProperty(this, \"handleLegendChange\", newLegend => {\n      this.mapElement.current.changeCriticalLevel(newLegend);\n    });\n\n    _defineProperty(this, \"handleFilterSubmit\", (state, surface) => {\n      this.mapElement.current.changeFilterOptions(state, surface);\n    });\n\n    this.mapElement = React.createRef();\n    this.legendElement = React.createRef();\n    this.customFilter = React.createRef();\n    this.state = {\n      selectedOption: \"all\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return (// Important! Always set the container height explicitly\n      __jsx(\"div\", {\n        class: \"map-container\"\n      }, __jsx(\"div\", {\n        className: \"legend\"\n      }, __jsx(\"h5\", null, \"Mo\\u017Enosti:\"), __jsx(Select, {\n        defaultValue: options[0],\n        onChange: this.handleChange,\n        options: options\n      }), __jsx(Legend, {\n        ref: this.legendElement,\n        change: this.handleLegendChange\n      }), __jsx(CustomFilter, {\n        change: this.handleFilterSubmit,\n        ref: this.customFilter\n      })), __jsx(\"div\", {\n        className: \"map\"\n      }, __jsx(Map, {\n        option: this.state.selectedOption,\n        ref: this.mapElement\n      })))\n    );\n  }\n\n}\n\nexport default SimpleMap;","map":{"version":3,"sources":["D:/Projects/Webpages/BoomMap/client/react-SSR-app/pages/zemljevid.js"],"names":["React","Component","Select","Map","Legend","Container","Row","Col","Grid","CustomFilter","Breakpoint","BreakpointProvider","options","value","label","SimpleMap","constructor","props","selectedOption","mapElement","current","changeOption","setState","visi","console","log","customFilter","changeVisibility","newLegend","changeCriticalLevel","state","surface","changeFilterOptions","createRef","legendElement","handleChange","bind","render","handleLegendChange","handleFilterSubmit"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,IAAqBC,kBAArB,QAA+C,aAA/C;AAEA,MAAMC,OAAO,GAAG,CACf;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFe,CAAhB;;AAKA,MAAMC,SAAN,SAAwBd,SAAxB,CAAkC;AACjCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,0CAWHC,cAAD,IAAoB;AAClC,WAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,YAAxB,CAAqCH,cAArC;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAEA;AAAlB,OAAd;AACA,UAAIK,IAAI,GAAGL,cAAc,CAACL,KAAf,KAAyB,KAAzB,GAAiC,SAAjC,GAA6C,QAAxD;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,YAAL,CAAkBN,OAAlB,CAA0BO,gBAA1B,CAA2CJ,IAA3C;AACA,KAlBkB;;AAAA,gDAoBGK,SAAD,IAAe;AACnC,WAAKT,UAAL,CAAgBC,OAAhB,CAAwBS,mBAAxB,CAA4CD,SAA5C;AACA,KAtBkB;;AAAA,gDAwBE,CAACE,KAAD,EAAQC,OAAR,KAAoB;AACxC,WAAKZ,UAAL,CAAgBC,OAAhB,CAAwBY,mBAAxB,CAA4CF,KAA5C,EAAmDC,OAAnD;AACA,KA1BkB;;AAElB,SAAKZ,UAAL,GAAkBnB,KAAK,CAACiC,SAAN,EAAlB;AACA,SAAKC,aAAL,GAAqBlC,KAAK,CAACiC,SAAN,EAArB;AACA,SAAKP,YAAL,GAAoB1B,KAAK,CAACiC,SAAN,EAApB;AACA,SAAKH,KAAL,GAAa;AACZZ,MAAAA,cAAc,EAAE;AADJ,KAAb;AAGA,SAAKiB,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAkBDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEnB,MAAAA;AAAF,QAAqB,KAAKY,KAAhC;AAEA,WACC;AACA;AAAK,QAAA,KAAK,EAAC;AAAX,SACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACC,mCADD,EAEC,MAAC,MAAD;AACC,QAAA,YAAY,EAAElB,OAAO,CAAC,CAAD,CADtB;AAEC,QAAA,QAAQ,EAAE,KAAKuB,YAFhB;AAGC,QAAA,OAAO,EAAEvB;AAHV,QAFD,EAOC,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,KAAKsB,aAAlB;AAAiC,QAAA,MAAM,EAAE,KAAKI;AAA9C,QAPD,EAQC,MAAC,YAAD;AACC,QAAA,MAAM,EAAE,KAAKC,kBADd;AAEC,QAAA,GAAG,EAAE,KAAKb;AAFX,QARD,CADD,EAcC;AAAK,QAAA,SAAS,EAAC;AAAf,SACC,MAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAWZ,cAAxB;AAAwC,QAAA,GAAG,EAAE,KAAKC;AAAlD,QADD,CAdD;AAFD;AAqBA;;AApDgC;;AAuDlC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Map from \"../components/Map\";\r\nimport Legend from \"./components/Legend\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CustomFilter from \"./components/CustomFilter\";\r\nimport Breakpoint, { BreakpointProvider } from \"react-socks\";\r\n\r\nconst options = [\r\n\t{ value: \"current\", label: \"Trenutno stanje\" },\r\n\t{ value: \"all\", label: \"Kritični odseki\" },\r\n];\r\n\r\nclass SimpleMap extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.mapElement = React.createRef();\r\n\t\tthis.legendElement = React.createRef();\r\n\t\tthis.customFilter = React.createRef();\r\n\t\tthis.state = {\r\n\t\t\tselectedOption: \"all\",\r\n\t\t};\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleChange = (selectedOption) => {\r\n\t\tthis.mapElement.current.changeOption(selectedOption);\r\n\t\tthis.setState({ selectedOption: selectedOption });\r\n\t\tlet visi = selectedOption.value === \"all\" ? \"visible\" : \"hidden\";\r\n\t\tconsole.log(selectedOption);\r\n\t\tconsole.log(visi);\r\n\t\tthis.customFilter.current.changeVisibility(visi);\r\n\t};\r\n\r\n\thandleLegendChange = (newLegend) => {\r\n\t\tthis.mapElement.current.changeCriticalLevel(newLegend);\r\n\t};\r\n\r\n\thandleFilterSubmit = (state, surface) => {\r\n\t\tthis.mapElement.current.changeFilterOptions(state, surface);\r\n\t};\r\n\trender() {\r\n\t\tconst { selectedOption } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t// Important! Always set the container height explicitly\r\n\t\t\t<div class=\"map-container\">\r\n\t\t\t\t<div className=\"legend\">\r\n\t\t\t\t\t<h5>Možnosti:</h5>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tdefaultValue={options[0]}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Legend ref={this.legendElement} change={this.handleLegendChange} />\r\n\t\t\t\t\t<CustomFilter\r\n\t\t\t\t\t\tchange={this.handleFilterSubmit}\r\n\t\t\t\t\t\tref={this.customFilter}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"map\">\r\n\t\t\t\t\t<Map option={this.state.selectedOption} ref={this.mapElement} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SimpleMap;\r\n"]},"metadata":{},"sourceType":"module"}