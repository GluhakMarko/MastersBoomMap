{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport Select from \"react-select\";\nimport Map from \"./components/Map\";\nimport Legend from \"./components/Legend\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomFilter from \"./components/CustomFilter\";\nimport Breakpoint, { BreakpointProvider } from \"react-socks\";\nvar options = [{\n  value: \"current\",\n  label: \"Trenutno stanje\"\n}, {\n  value: \"all\",\n  label: \"Kritični odseki\"\n}];\n\nvar SimpleMap = /*#__PURE__*/function (_Component) {\n  _inherits(SimpleMap, _Component);\n\n  var _super = _createSuper(SimpleMap);\n\n  function SimpleMap(props) {\n    var _this;\n\n    _classCallCheck(this, SimpleMap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (selectedOption) {\n      _this.mapElement.current.changeOption(selectedOption);\n\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      var visi = selectedOption.value === \"all\" ? \"visible\" : \"hidden\";\n      console.log(selectedOption);\n      console.log(visi);\n\n      _this.customFilter.current.changeVisibility(visi);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLegendChange\", function (newLegend) {\n      _this.mapElement.current.changeCriticalLevel(newLegend);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterSubmit\", function (state, surface) {\n      _this.mapElement.current.changeFilterOptions(state, surface);\n    });\n\n    _this.mapElement = React.createRef();\n    _this.legendElement = React.createRef();\n    _this.customFilter = React.createRef();\n    _this.state = {\n      selectedOption: \"all\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SimpleMap, [{\n    key: \"render\",\n    value: function render() {\n      var selectedOption = this.state.selectedOption;\n      return (// Important! Always set the container height explicitly\n        __jsx(\"div\", {\n          class: \"map-container\"\n        }, __jsx(\"div\", {\n          className: \"legend\"\n        }, __jsx(\"h5\", null, \"Mo\\u017Enosti:\"), __jsx(Select, {\n          defaultValue: options[0],\n          onChange: this.handleChange,\n          options: options\n        }), __jsx(Legend, {\n          ref: this.legendElement,\n          change: this.handleLegendChange\n        }), __jsx(CustomFilter, {\n          change: this.handleFilterSubmit,\n          ref: this.customFilter\n        })), __jsx(\"div\", {\n          className: \"map\"\n        }, __jsx(Map, {\n          option: this.state.selectedOption,\n          ref: this.mapElement\n        })))\n      );\n    }\n  }]);\n\n  return SimpleMap;\n}(Component);\n\nexport default SimpleMap;","map":{"version":3,"sources":["/Users/pinagornik/Documents/faks/praktikumSSV/client/react-SSR-app/pages/home.js"],"names":["React","Component","Select","Map","Legend","Container","Row","Col","Grid","CustomFilter","Breakpoint","BreakpointProvider","options","value","label","SimpleMap","props","selectedOption","mapElement","current","changeOption","setState","visi","console","log","customFilter","changeVisibility","newLegend","changeCriticalLevel","state","surface","changeFilterOptions","createRef","legendElement","handleChange","bind","handleLegendChange","handleFilterSubmit"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,IAAqBC,kBAArB,QAA+C,aAA/C;AAEA,IAAMC,OAAO,GAAG,CACf;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFe,CAAhB;;IAKMC,S;;;;;AACL,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,mEAWJ,UAAAC,cAAc,EAAI;AAChC,YAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,YAAxB,CAAqCH,cAArC;;AACA,YAAKI,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAEA;AAAlB,OAAd;;AACA,UAAIK,IAAI,GAAGL,cAAc,CAACJ,KAAf,KAAyB,KAAzB,GAAiC,SAAjC,GAA6C,QAAxD;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAKG,YAAL,CAAkBN,OAAlB,CAA0BO,gBAA1B,CAA2CJ,IAA3C;AACA,KAlBkB;;AAAA,yEAoBE,UAAAK,SAAS,EAAI;AACjC,YAAKT,UAAL,CAAgBC,OAAhB,CAAwBS,mBAAxB,CAA4CD,SAA5C;AACA,KAtBkB;;AAAA,yEAwBE,UAACE,KAAD,EAAQC,OAAR,EAAoB;AACxC,YAAKZ,UAAL,CAAgBC,OAAhB,CAAwBY,mBAAxB,CAA4CF,KAA5C,EAAmDC,OAAnD;AACA,KA1BkB;;AAElB,UAAKZ,UAAL,GAAkBlB,KAAK,CAACgC,SAAN,EAAlB;AACA,UAAKC,aAAL,GAAqBjC,KAAK,CAACgC,SAAN,EAArB;AACA,UAAKP,YAAL,GAAoBzB,KAAK,CAACgC,SAAN,EAApB;AACA,UAAKH,KAAL,GAAa;AACZZ,MAAAA,cAAc,EAAE;AADJ,KAAb;AAGA,UAAKiB,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AARkB;AASlB;;;;6BAkBQ;AAAA,UACAlB,cADA,GACmB,KAAKY,KADxB,CACAZ,cADA;AAGR,aACC;AACA;AAAK,UAAA,KAAK,EAAC;AAAX,WACC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC,mCADD,EAEC,MAAC,MAAD;AACC,UAAA,YAAY,EAAEL,OAAO,CAAC,CAAD,CADtB;AAEC,UAAA,QAAQ,EAAE,KAAKsB,YAFhB;AAGC,UAAA,OAAO,EAAEtB;AAHV,UAFD,EAOC,MAAC,MAAD;AAAQ,UAAA,GAAG,EAAE,KAAKqB,aAAlB;AAAiC,UAAA,MAAM,EAAE,KAAKG;AAA9C,UAPD,EAQC,MAAC,YAAD;AACC,UAAA,MAAM,EAAE,KAAKC,kBADd;AAEC,UAAA,GAAG,EAAE,KAAKZ;AAFX,UARD,CADD,EAcC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC,MAAC,GAAD;AAAK,UAAA,MAAM,EAAE,KAAKI,KAAL,CAAWZ,cAAxB;AAAwC,UAAA,GAAG,EAAE,KAAKC;AAAlD,UADD,CAdD;AAFD;AAqBA;;;;EApDsBjB,S;;AAuDxB,eAAec,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport Select from \"react-select\";\nimport Map from \"./components/Map\";\nimport Legend from \"./components/Legend\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomFilter from \"./components/CustomFilter\";\nimport Breakpoint, { BreakpointProvider } from \"react-socks\";\n\nconst options = [\n\t{ value: \"current\", label: \"Trenutno stanje\" },\n\t{ value: \"all\", label: \"Kritični odseki\" }\n];\n\nclass SimpleMap extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.mapElement = React.createRef();\n\t\tthis.legendElement = React.createRef();\n\t\tthis.customFilter = React.createRef();\n\t\tthis.state = {\n\t\t\tselectedOption: \"all\"\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange = selectedOption => {\n\t\tthis.mapElement.current.changeOption(selectedOption);\n\t\tthis.setState({ selectedOption: selectedOption });\n\t\tlet visi = selectedOption.value === \"all\" ? \"visible\" : \"hidden\";\n\t\tconsole.log(selectedOption);\n\t\tconsole.log(visi);\n\t\tthis.customFilter.current.changeVisibility(visi);\n\t};\n\n\thandleLegendChange = newLegend => {\n\t\tthis.mapElement.current.changeCriticalLevel(newLegend);\n\t};\n\n\thandleFilterSubmit = (state, surface) => {\n\t\tthis.mapElement.current.changeFilterOptions(state, surface);\n\t};\n\trender() {\n\t\tconst { selectedOption } = this.state;\n\n\t\treturn (\n\t\t\t// Important! Always set the container height explicitly\n\t\t\t<div class=\"map-container\">\n\t\t\t\t<div className=\"legend\">\n\t\t\t\t\t<h5>Možnosti:</h5>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tdefaultValue={options[0]}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t/>\n\t\t\t\t\t<Legend ref={this.legendElement} change={this.handleLegendChange} />\n\t\t\t\t\t<CustomFilter\n\t\t\t\t\t\tchange={this.handleFilterSubmit}\n\t\t\t\t\t\tref={this.customFilter}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"map\">\n\t\t\t\t\t<Map option={this.state.selectedOption} ref={this.mapElement} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SimpleMap;\n"]},"metadata":{},"sourceType":"module"}