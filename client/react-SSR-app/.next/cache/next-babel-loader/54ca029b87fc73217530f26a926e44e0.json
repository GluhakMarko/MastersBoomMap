{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label } from 'recharts';\nimport axios from 'axios';\nvar data = [];\n\nvar serverLocation = require(\"../../../../src/config/keys\").server;\n\nvar NesreceTip = /*#__PURE__*/function (_PureComponent) {\n  _inherits(NesreceTip, _PureComponent);\n\n  var _super = _createSuper(NesreceTip);\n\n  function NesreceTip() {\n    var _this;\n\n    _classCallCheck(this, NesreceTip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      datac: []\n    });\n\n    return _this;\n  }\n\n  _createClass(NesreceTip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"\".concat(serverLocation, \"/api/graph/30\")).then(function (res) {\n        _this2.setState({\n          datac: res.data\n        });\n\n        for (var key in _this2.state) {\n          data.push(_this2.state[key]);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(BarChart, {\n        width: 1100,\n        height: 300,\n        data: this.state.datac.podatki,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"5 5\"\n      }), __jsx(XAxis, {\n        dataKey: \"tip\",\n        interval: 0,\n        fontSize: 8\n      }), __jsx(YAxis, null), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(Bar, {\n        dataKey: \"nesrece\",\n        fill: \"#52bf90\",\n        label: {\n          fill: 'white',\n          fontSize: 15\n        }\n      }));\n    }\n  }]);\n\n  return NesreceTip;\n}(PureComponent);\n\nexport { NesreceTip as default };","map":{"version":3,"sources":["D:/Projects/Webpages/BoomMap/client/react-SSR-app/pages/components/graphs/NesreceTip.js"],"names":["React","PureComponent","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Label","axios","data","serverLocation","require","server","NesreceTip","datac","get","then","res","setState","key","state","push","podatki","top","right","left","bottom","fill","fontSize"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SACIC,QADJ,EACcC,GADd,EACmBC,IADnB,EACyBC,KADzB,EACgCC,KADhC,EACuCC,aADvC,EACsDC,OADtD,EAC+DC,MAD/D,EACuEC,KADvE,QAEO,UAFP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,IAAI,GAAG,EAAX;;AAGA,IAAMC,cAAc,GAAGC,OAAO,CAAC,6BAAD,CAAP,CAAuCC,MAA9D;;IAEqBC,U;;;;;;;;;;;;;;;;4DAET;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;;wCAIY;AAAA;;AAChBN,MAAAA,KAAK,CAACO,GAAN,WAAaL,cAAb,oBAA4CM,IAA5C,CAAiD,UAAAC,GAAG,EAAI;AACpD,QAAA,MAAI,CAACC,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAEG,GAAG,CAACR;AAAZ,SAAd;;AACA,aAAI,IAAIU,GAAR,IAAe,MAAI,CAACC,KAApB,EAA2B;AACvBX,UAAAA,IAAI,CAACY,IAAL,CAAU,MAAI,CAACD,KAAL,CAAWD,GAAX,CAAV;AACH;AACJ,OALD;AAMH;;;6BAEQ;AACL,aACI,MAAC,QAAD;AACI,QAAA,KAAK,EAAE,IADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWN,KAAX,CAAiBQ,OAH3B;AAII,QAAA,MAAM,EAAE;AACJC,UAAAA,GAAG,EAAE,CADD;AACIC,UAAAA,KAAK,EAAE,EADX;AACeC,UAAAA,IAAI,EAAE,EADrB;AACyBC,UAAAA,MAAM,EAAE;AADjC;AAJZ,SAQI,MAAC,aAAD;AAAe,QAAA,eAAe,EAAC;AAA/B,QARJ,EASI,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,KAAf;AAAqB,QAAA,QAAQ,EAAE,CAA/B;AAAkC,QAAA,QAAQ,EAAE;AAA5C,QATJ,EAUI,MAAC,KAAD,OAVJ,EAWI,MAAC,OAAD,OAXJ,EAYI,MAAC,MAAD,OAZJ,EAaI,MAAC,GAAD;AAAK,QAAA,OAAO,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAsC,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AAA7C,QAbJ,CADJ;AAiBH;;;;EAjCmC9B,a;;SAAnBe,U","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport {\r\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label\r\n} from 'recharts';\r\n\r\nimport axios from 'axios';\r\n\r\nvar data = [\r\n];\r\n\r\nconst serverLocation = require(\"../../../../src/config/keys\").server;\r\n\r\nexport default class NesreceTip extends PureComponent {\r\n\r\n    state = {\r\n        datac: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`${serverLocation}/api/graph/30`).then(res => {\r\n            this.setState({datac: res.data});\r\n            for(var key in this.state) {\r\n                data.push(this.state[key]);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BarChart\r\n                width={1100}\r\n                height={300}\r\n                data={this.state.datac.podatki}\r\n                margin={{\r\n                    top: 5, right: 30, left: 20, bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"5 5\" />\r\n                <XAxis dataKey=\"tip\" interval={0} fontSize={8} />\r\n                <YAxis/>\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"nesrece\" fill=\"#52bf90\" label={{ fill: 'white', fontSize: 15 }}/>\r\n            </BarChart>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}