{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport ReactDOM from \"react-dom\";\nimport parse from \"html-react-parser\";\n\nconst serverLocation = require(\"../../../../src/config/keys\").server;\n\nvar data = [];\nvar parsed;\n\nclass RoadConditions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      datag: []\n    });\n  }\n\n  componentDidMount() {\n    axios.get(`${serverLocation}/api/content/road-conditions?limit=1`).then(res => {\n      this.setState({\n        datag: res.data\n      }, () => console.log(\"Updated state\"));\n\n      for (var key in this.state) {\n        data.push(this.state[key]);\n      }\n    });\n  }\n\n  render() {\n    let numbers;\n\n    if (this.state.datag.items) {\n      numbers = this.state.datag.items[0].map(item => {\n        parsed = parse(\"\" + item.description + \"\");\n        return __jsx(\"div\", {\n          className: \"ContentStyle\"\n        }, __jsx(\"div\", {\n          className: \"contentHeader\"\n        }, __jsx(\"h5\", null, __jsx(\"b\", null, item.title)), __jsx(\"p\", {\n          className: \"date\"\n        }, new Date(item.datePublished).toDateString())), __jsx(\"hr\", null), __jsx(\"p\", {\n          className: \"cardContent\"\n        }, parsed));\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"containerEvents\"\n    }, __jsx(\"div\", {\n      className: \"col-xs-8\"\n    }, __jsx(\"ul\", null, numbers)));\n  }\n\n}\n\nexport default RoadConditions;","map":{"version":3,"sources":["/Users/pinagornik/Documents/faks/praktikumSSV/client/react-SSR-app/pages/components/rss/RoadConditions.js"],"names":["React","axios","ReactDOM","parse","serverLocation","require","server","data","parsed","RoadConditions","Component","datag","componentDidMount","get","then","res","setState","console","log","key","state","push","render","numbers","items","map","item","description","title","Date","datePublished","toDateString"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,6BAAD,CAAP,CAAuCC,MAA9D;;AAEA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,MAAJ;;AACA,MAAMC,cAAN,SAA6BT,KAAK,CAACU,SAAnC,CAA6C;AAAA;AAAA;;AAAA,mCACpC;AACPC,MAAAA,KAAK,EAAE;AADA,KADoC;AAAA;;AAK5CC,EAAAA,iBAAiB,GAAG;AACnBX,IAAAA,KAAK,CACHY,GADF,CACO,GAAET,cAAe,sCADxB,EAEEU,IAFF,CAEQC,GAAD,IAAS;AACd,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,GAAG,CAACR;AAAb,OAAd,EAAmC,MAAMU,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAzC;;AACA,WAAK,IAAIC,GAAT,IAAgB,KAAKC,KAArB,EAA4B;AAC3Bb,QAAAA,IAAI,CAACc,IAAL,CAAU,KAAKD,KAAL,CAAWD,GAAX,CAAV;AACA;AACD,KAPF;AAQA;;AAEDG,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAJ;;AACA,QAAI,KAAKH,KAAL,CAAWT,KAAX,CAAiBa,KAArB,EAA4B;AAC3BD,MAAAA,OAAO,GAAG,KAAKH,KAAL,CAAWT,KAAX,CAAiBa,KAAjB,CAAuB,CAAvB,EAA0BC,GAA1B,CAA+BC,IAAD,IAAU;AACjDlB,QAAAA,MAAM,GAAGL,KAAK,CAAC,KAAKuB,IAAI,CAACC,WAAV,GAAwB,EAAzB,CAAd;AACA,eACC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC,kBACC,iBAAID,IAAI,CAACE,KAAT,CADD,CADD,EAIC;AAAG,UAAA,SAAS,EAAC;AAAb,WACE,IAAIC,IAAJ,CAASH,IAAI,CAACI,aAAd,EAA6BC,YAA7B,EADF,CAJD,CADD,EASC,iBATD,EAWC;AAAG,UAAA,SAAS,EAAC;AAAb,WAA4BvB,MAA5B,CAXD,CADD;AAeA,OAjBS,CAAV;AAkBA;;AACD,WACC;AAAK,MAAA,SAAS,EAAC;AAAf,OACC;AAAK,MAAA,SAAS,EAAC;AAAf,OACC,kBAAKe,OAAL,CADD,CADD,CADD;AAOA;;AA7C2C;;AA+C7C,eAAed,cAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport ReactDOM from \"react-dom\";\nimport parse from \"html-react-parser\";\nconst serverLocation = require(\"../../../../src/config/keys\").server;\n\nvar data = [];\nvar parsed;\nclass RoadConditions extends React.Component {\n\tstate = {\n\t\tdatag: [],\n\t};\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(`${serverLocation}/api/content/road-conditions?limit=1`)\n\t\t\t.then((res) => {\n\t\t\t\tthis.setState({ datag: res.data }, () => console.log(\"Updated state\"));\n\t\t\t\tfor (var key in this.state) {\n\t\t\t\t\tdata.push(this.state[key]);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\trender() {\n\t\tlet numbers;\n\t\tif (this.state.datag.items) {\n\t\t\tnumbers = this.state.datag.items[0].map((item) => {\n\t\t\t\tparsed = parse(\"\" + item.description + \"\");\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"ContentStyle\">\n\t\t\t\t\t\t<div className=\"contentHeader\">\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<b>{item.title}</b>\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t<p className=\"date\">\n\t\t\t\t\t\t\t\t{new Date(item.datePublished).toDateString()}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr />\n\n\t\t\t\t\t\t<p className=\"cardContent\">{parsed}</p>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"containerEvents\">\n\t\t\t\t<div className=\"col-xs-8\">\n\t\t\t\t\t<ul>{numbers}</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default RoadConditions;\n"]},"metadata":{},"sourceType":"module"}