{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport parse from \"html-react-parser\";\n\nconst serverLocation = require(\"../../../../src/config/keys\").server;\n\nvar data = [];\nvar sliced = [];\nvar parsed;\n\nclass News extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      datag: [],\n      title: []\n    });\n  }\n\n  componentDidMount() {\n    axios.get(`${serverLocation}/api/content/news`).then(res => {\n      this.setState({\n        datag: res.data.items.slice(0, 10)\n      }, () => console.log(\"Updated state\"));\n\n      for (var key in this.state) {\n        data.push(this.state[key]);\n      }\n    });\n  }\n\n  render() {\n    let numbers;\n\n    if (this.state.datag[0]) {\n      numbers = this.state.datag[0].map(item => {\n        console.log(\"Iterating through for item \" + item.title);\n        parsed = parse(\"\" + item.description + \"\");\n        return __jsx(\"div\", {\n          className: \"ContentStyle\"\n        }, __jsx(\"div\", {\n          className: \"contentHeader\"\n        }, __jsx(\"h5\", null, __jsx(\"b\", null, item.title)), __jsx(\"p\", {\n          className: \"date\"\n        }, new Date(item.datePublished).toDateString())), __jsx(\"hr\", null), __jsx(\"p\", {\n          className: \"cardContent\"\n        }, parsed));\n      });\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"containerEvents\"\n    }, __jsx(\"div\", {\n      className: \"col-xs-8\"\n    }, numbers)));\n  }\n\n}\n\nexport default News;","map":{"version":3,"sources":["D:/Projects/Webpages/BoomMap/client/react-SSR-app/pages/components/rss/News.js"],"names":["React","axios","parse","serverLocation","require","server","data","sliced","parsed","News","Component","datag","title","componentDidMount","get","then","res","setState","items","slice","console","log","key","state","push","render","numbers","map","item","description","Date","datePublished","toDateString"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAAC,6BAAD,CAAP,CAAuCC,MAA9D;;AAEA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,MAAJ;;AAEA,MAAMC,IAAN,SAAmBT,KAAK,CAACU,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCAC1B;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAD0B;AAAA;;AAMlCC,EAAAA,iBAAiB,GAAG;AACnBZ,IAAAA,KAAK,CAACa,GAAN,CAAW,GAAEX,cAAe,mBAA5B,EAAgDY,IAAhD,CAAsDC,GAAD,IAAS;AAC7D,WAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEK,GAAG,CAACV,IAAJ,CAASY,KAAT,CAAeC,KAAf,CAAqB,CAArB,EAAwB,EAAxB;AAAT,OAAd,EAAsD,MACrDC,OAAO,CAACC,GAAR,CAAY,eAAZ,CADD;;AAIA,WAAK,IAAIC,GAAT,IAAgB,KAAKC,KAArB,EAA4B;AAC3BjB,QAAAA,IAAI,CAACkB,IAAL,CAAU,KAAKD,KAAL,CAAWD,GAAX,CAAV;AACA;AACD,KARD;AASA;;AAEDG,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAJ;;AACA,QAAI,KAAKH,KAAL,CAAWZ,KAAX,CAAiB,CAAjB,CAAJ,EAAyB;AACxBe,MAAAA,OAAO,GAAG,KAAKH,KAAL,CAAWZ,KAAX,CAAiB,CAAjB,EAAoBgB,GAApB,CAAyBC,IAAD,IAAU;AAC3CR,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCO,IAAI,CAAChB,KAAjD;AACAJ,QAAAA,MAAM,GAAGN,KAAK,CAAC,KAAK0B,IAAI,CAACC,WAAV,GAAwB,EAAzB,CAAd;AACA,eACC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC,kBACC,iBAAID,IAAI,CAAChB,KAAT,CADD,CADD,EAIC;AAAG,UAAA,SAAS,EAAC;AAAb,WACE,IAAIkB,IAAJ,CAASF,IAAI,CAACG,aAAd,EAA6BC,YAA7B,EADF,CAJD,CADD,EASC,iBATD,EAWC;AAAG,UAAA,SAAS,EAAC;AAAb,WAA4BxB,MAA5B,CAXD,CADD;AAeA,OAlBS,CAAV;AAmBA;;AACD,WACC,4BACC;AAAK,MAAA,SAAS,EAAC;AAAf,OACC;AAAK,MAAA,SAAS,EAAC;AAAf,OAA2BkB,OAA3B,CADD,CADD,CADD;AAOA;;AAhDiC;;AAkDnC,eAAejB,IAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst serverLocation = require(\"../../../../src/config/keys\").server;\r\n\r\nvar data = [];\r\nvar sliced = [];\r\nvar parsed;\r\n\r\nclass News extends React.Component {\r\n\tstate = {\r\n\t\tdatag: [],\r\n\t\ttitle: [],\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get(`${serverLocation}/api/content/news`).then((res) => {\r\n\t\t\tthis.setState({ datag: res.data.items.slice(0, 10) }, () =>\r\n\t\t\t\tconsole.log(\"Updated state\")\r\n\t\t\t);\r\n\r\n\t\t\tfor (var key in this.state) {\r\n\t\t\t\tdata.push(this.state[key]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet numbers;\r\n\t\tif (this.state.datag[0]) {\r\n\t\t\tnumbers = this.state.datag[0].map((item) => {\r\n\t\t\t\tconsole.log(\"Iterating through for item \" + item.title);\r\n\t\t\t\tparsed = parse(\"\" + item.description + \"\");\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"ContentStyle\">\r\n\t\t\t\t\t\t<div className=\"contentHeader\">\r\n\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t<b>{item.title}</b>\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t<p className=\"date\">\r\n\t\t\t\t\t\t\t\t{new Date(item.datePublished).toDateString()}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t\t<p className=\"cardContent\">{parsed}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"containerEvents\">\r\n\t\t\t\t\t<div className=\"col-xs-8\">{numbers}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nexport default News;\r\n"]},"metadata":{},"sourceType":"module"}